<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.csd.mapper.EquipmentMapper">
  <resultMap id="BaseResultMap" type="com.csd.entity.Equipment">
    <id column="equip_id" jdbcType="INTEGER" property="equipId" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="equip_name" jdbcType="VARCHAR" property="equipName" />
    <result column="equip_type_name" jdbcType="VARCHAR" property="equipTypeName" />
    <result column="equip_desc" jdbcType="VARCHAR" property="equipDesc" />
    <result column="equip_storage_date" jdbcType="VARCHAR" property="equipStorageDate" />
    <result column="equip_count" jdbcType="INTEGER" property="equipCount" />
    <result column="equip_price" jdbcType="DECIMAL" property="equipPrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    equip_id, department_id, equip_name, equip_type_name, equip_desc, equip_storage_date, 
    equip_count, equip_price
  </sql>
  <select id="selectByExample" parameterType="com.csd.entity.EquipmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from equipment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from equipment
    where equip_id = #{equipId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from equipment
    where equip_id = #{equipId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.csd.entity.EquipmentExample">
    delete from equipment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.csd.entity.Equipment">
    insert into equipment (equip_id, department_id, equip_name, 
      equip_type_name, equip_desc, equip_storage_date, 
      equip_count, equip_price)
    values (#{equipId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, #{equipName,jdbcType=VARCHAR}, 
      #{equipTypeName,jdbcType=VARCHAR}, #{equipDesc,jdbcType=VARCHAR}, #{equipStorageDate,jdbcType=VARCHAR}, 
      #{equipCount,jdbcType=INTEGER}, #{equipPrice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.csd.entity.Equipment">
    insert into equipment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="equipId != null">
        equip_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="equipName != null">
        equip_name,
      </if>
      <if test="equipTypeName != null">
        equip_type_name,
      </if>
      <if test="equipDesc != null">
        equip_desc,
      </if>
      <if test="equipStorageDate != null">
        equip_storage_date,
      </if>
      <if test="equipCount != null">
        equip_count,
      </if>
      <if test="equipPrice != null">
        equip_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="equipId != null">
        #{equipId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="equipName != null">
        #{equipName,jdbcType=VARCHAR},
      </if>
      <if test="equipTypeName != null">
        #{equipTypeName,jdbcType=VARCHAR},
      </if>
      <if test="equipDesc != null">
        #{equipDesc,jdbcType=VARCHAR},
      </if>
      <if test="equipStorageDate != null">
        #{equipStorageDate,jdbcType=VARCHAR},
      </if>
      <if test="equipCount != null">
        #{equipCount,jdbcType=INTEGER},
      </if>
      <if test="equipPrice != null">
        #{equipPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.csd.entity.EquipmentExample" resultType="java.lang.Long">
    select count(*) from equipment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update equipment
    <set>
      <if test="record.equipId != null">
        equip_id = #{record.equipId,jdbcType=INTEGER},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.equipName != null">
        equip_name = #{record.equipName,jdbcType=VARCHAR},
      </if>
      <if test="record.equipTypeName != null">
        equip_type_name = #{record.equipTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.equipDesc != null">
        equip_desc = #{record.equipDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.equipStorageDate != null">
        equip_storage_date = #{record.equipStorageDate,jdbcType=VARCHAR},
      </if>
      <if test="record.equipCount != null">
        equip_count = #{record.equipCount,jdbcType=INTEGER},
      </if>
      <if test="record.equipPrice != null">
        equip_price = #{record.equipPrice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update equipment
    set equip_id = #{record.equipId,jdbcType=INTEGER},
      department_id = #{record.departmentId,jdbcType=INTEGER},
      equip_name = #{record.equipName,jdbcType=VARCHAR},
      equip_type_name = #{record.equipTypeName,jdbcType=VARCHAR},
      equip_desc = #{record.equipDesc,jdbcType=VARCHAR},
      equip_storage_date = #{record.equipStorageDate,jdbcType=VARCHAR},
      equip_count = #{record.equipCount,jdbcType=INTEGER},
      equip_price = #{record.equipPrice,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.csd.entity.Equipment">
    update equipment
    <set>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="equipName != null">
        equip_name = #{equipName,jdbcType=VARCHAR},
      </if>
      <if test="equipTypeName != null">
        equip_type_name = #{equipTypeName,jdbcType=VARCHAR},
      </if>
      <if test="equipDesc != null">
        equip_desc = #{equipDesc,jdbcType=VARCHAR},
      </if>
      <if test="equipStorageDate != null">
        equip_storage_date = #{equipStorageDate,jdbcType=VARCHAR},
      </if>
      <if test="equipCount != null">
        equip_count = #{equipCount,jdbcType=INTEGER},
      </if>
      <if test="equipPrice != null">
        equip_price = #{equipPrice,jdbcType=DECIMAL},
      </if>
    </set>
    where equip_id = #{equipId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.csd.entity.Equipment">
    update equipment
    set department_id = #{departmentId,jdbcType=INTEGER},
      equip_name = #{equipName,jdbcType=VARCHAR},
      equip_type_name = #{equipTypeName,jdbcType=VARCHAR},
      equip_desc = #{equipDesc,jdbcType=VARCHAR},
      equip_storage_date = #{equipStorageDate,jdbcType=VARCHAR},
      equip_count = #{equipCount,jdbcType=INTEGER},
      equip_price = #{equipPrice,jdbcType=DECIMAL}
    where equip_id = #{equipId,jdbcType=INTEGER}
  </update>
</mapper>